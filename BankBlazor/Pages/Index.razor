@page "/"
@using Banksystem

<PageTitle>Index</PageTitle>
<div id=Accountbalancestyle>
<h1>Please enter your Information</h1>
<h2>Create an account</h2>
<p>Name:
    <input type='text' @bind="name"><br>
</p>
<p>Lastname:
    <input type='text' @bind="Lastname"><br>
</p>
<p>birthday day:
    <input type='number' @bind="day"><br>
</p>
<p>birthday month:
    <input type='number' @bind="Month"><br>
</p>
<p>birtday year:
    <input type='number' @bind="Year"><br>
</p>
<p>Account number:
    <input type= 'number'@bind= "Accountnumber"><br>
</p>
</div>
<button @onclick="CreateCustomer"> Create Customer</button><br>
@errorMessage<br>

@if (Bank.Accounts.Count() == 0)
{
    <p>No accounts in list.</p>
}
@foreach (var customer in Bank.Accounts)
{
Account:
    <a href="/account/@customer.Owner.Name">
    @customer.Owner.Name, @customer.Owner.Lastname<br>
</a> <br />
}




@code {


    string name;
    string Lastname;
    int day;
    int Month;
    int Year;
    bool Savingaccount = false;
    bool Credit = false;
    decimal savingbalance = 0;
    int balance = 50;
    decimal creditamount;

    int Accountnumber;

    protected override void OnInitialized()
    {
        Bank.LoadAccounts();
    }
    Banksystem.Customer customer;
    string errorMessage;
    public void CreateCustomer()
    {
    
        try{

        customer = new Customer(name, Lastname, 
                                day, Month, Year, 
                                balance, Savingaccount, 
                                savingbalance, Credit,
                                creditamount,Accountnumber);
        var account = new CheckingAccount(customer);
        Bank.Accounts.Add(account);
        Bank.SaveAccounts();
        errorMessage = null;
        } catch(AccountNumberMustBeBetweenn8And12Digits)
        {
            errorMessage = "Account Number must be between 8 and 12 digits";
        }catch (AccountNameInvalid)
        {
            errorMessage = "Account Name must be minimum 2 letters";
        } catch (Exception ex)
        {
            errorMessage = ex.Message;
        }
    }
    public void LoadedAccount()
    {
        Bank.LoadAccounts();

    }
    public void GetAccounntNumber()
    {
        customer.GetAccountNumber(Accountnumber);
    }
}