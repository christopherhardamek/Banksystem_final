@page "/account/{name}"
@using Banksystem

@using System.Linq;



@if (SelectedAccount == null)
{
    <p>No account '@AccountName' found</p>
    <p>And there are @Bank.Accounts.Count() accounts</p>
}
else
{
    <h1>Welcome @name, @SelectedAccount.Owner.Lastname</h1>

    <h1>@AccountName</h1>
    <p>Current Checkingbalance: @SelectedAccount.Owner.CheckingBalance</p>
    @if(SelectedAccount.Owner.savingaccount==true)
    {
        <p>Current Savingbalance: @SelectedAccount.Owner.SavingBalance</p>
    }   
    <label>Deposit Amount
        <input @bind=depositAmount />
    </label>
    <button @onclick="makeDeposit">Make Deposit</button>
    <button @onclick="Withdraw">withdrawn</button>


    <h2>Account Information</h2>


    <p>Name: @SelectedAccount.Owner.Name</p>
    <p>Lastname: @SelectedAccount.Owner.Lastname</p>
    <p>Balance: @SelectedAccount.Owner.CheckingBalance</p>
    <p>Birhtdate:</p>
    <p>Day: @SelectedAccount.Owner.Birthdate.Day</p>
    <p>Month: @SelectedAccount.Owner.Birthdate.Month</p>
    <p>Year: @SelectedAccount.Owner.Birthdate.Year</p>
}

@if(SelectedAccount.Owner.savingaccount == false)
{
    <button @onclick="Createsavingaccount">Create Savingaccount</button>
}


@log

<h3>Activities:</h3>



@foreach(var item in from a in Bank.Accounts
                     select new
                     {
                         Name = a.Owner.Name,
                         Balance = a.Owner.CheckingBalance
                         //Balance = a.Owner.CheckingBalance,
                     })
{
    <span> @item.Name has a Balance of @item.Balance </span><br/>
}
 


@foreach (var log in customerLogs)
{

    @log
    <br>
}


@code
{
    [Parameter]
    public string name { get; set; }
    public string lastname { get; set; }
    public string AccountName { get; set; }
    int day;
    int Month;
    int Year;
    string log;
    bool Savingaccount;
    IEnumerable<string> customerLogs;

    decimal depositAmount;
    public Banksystem.Account SelectedAccount;

    protected override void OnInitialized()
    {
        if (Bank.Accounts.Count > 0)
        {
            foreach (var customer in Bank.Accounts)
            {
                if (customer.Owner.Name == name)
                {
                    SelectedAccount = customer;
                    break;
                }
            }

        }
        Bank.LoadAccounts();
        logging.LoadLog();
        customerLogs = from log in logging.logs
                        where log.Contains(SelectedAccount.Owner.Name)
                        select log;
    }

    void Createsavingaccount()
    {
        SelectedAccount.Owner.MakeSavingAccount();
        Bank.SaveAccounts();
    }
    void makeDeposit()
    {
        SelectedAccount.Owner.MakeDeposit(depositAmount);
        Bank.SaveAccounts();
    }
    void Withdraw()
    {
        SelectedAccount.Owner.Withdrawn(depositAmount);
        Bank.SaveAccounts();
        logging.Savelog();
    }

}